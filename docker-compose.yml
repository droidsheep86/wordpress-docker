services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: wordpress_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites:/etc/nginx/conf.d
      # CORRECT: Points to the shared wordpress source folder on the host
      - ./wordpress:/var/www/html
    depends_on:
      - wordpress
    networks:
      - wordpress_network
    restart: unless-stopped

  # WordPress with Apache
  wordpress:
    image: wordpress:${PHP_VERSION:-php8.2}-apache
    container_name: wordpress_app
    user: "${UID}:${GID}"
    environment:
      WORDPRESS_DB_HOST: mariadb
      WORDPRESS_DB_USER: ${DB_USER:-wordpress}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD:-wordpress}
      WORDPRESS_DB_NAME: ${DB_NAME:-wordpress}
      WORDPRESS_CONFIG_EXTRA: |
        define('DISABLE_WP_CRON', true);
        define('WP_MEMORY_LIMIT', '512M');
        define('WP_CACHE', true);
        define('WP_REDIS_HOST', 'redis');
        define('WP_REDIS_PORT', 6379);
        define('WP_REDIS_DATABASE', 0);
    volumes:
      # CORRECT: This single line handles all wordpress files.
      - ./wordpress:/var/www/html
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    depends_on:
      - mariadb
      - redis
    networks:
      - wordpress_network
    restart: unless-stopped

  # MariaDB Database
  mariadb:
    image: mariadb:${MARIADB_VERSION:-10.11}
    container_name: wordpress_mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-wordpress}
      MYSQL_USER: ${DB_USER:-wordpress}
      MYSQL_PASSWORD: ${DB_PASSWORD:-wordpress}
    volumes:
      # This is correct for database data.
      - mariadb_data:/var/lib/mysql
      - ./mysql/custom.cnf:/etc/mysql/conf.d/custom.cnf
    ports:
      - "3306:3306"
    networks:
      - wordpress_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: wordpress_redis
    command: redis-server --appendonly yes
    volumes:
      # This is correct for redis data.
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - wordpress_network
    restart: unless-stopped

  # WP-CLI
  wpcli:
    image: wordpress:cli-${PHP_VERSION:-php8.2}
    container_name: wordpress_cli
    user: xfs
    environment:
      WORDPRESS_DB_HOST: mariadb
      WORDPRESS_DB_USER: ${DB_USER:-wordpress}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD:-wordpress}
      WORDPRESS_DB_NAME: ${DB_NAME:-wordpress}
    volumes:
      # CORRECT: Points to the shared wordpress source folder on the host
      - ./wordpress:/var/www/html
    depends_on:
      - mariadb
      - wordpress
    networks:
      - wordpress_network
    tty: true
    profiles:
      - cli

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: wordpress_mailhog
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Web UI port
    networks:
      - wordpress_network
    restart: unless-stopped

  # PHPMyAdmin (optional)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: wordpress_phpmyadmin
    environment:
      PMA_HOST: mariadb
      PMA_USER: ${DB_USER:-wordpress}
      PMA_PASSWORD: ${DB_PASSWORD:-wordpress}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
    ports:
      - "8080:80"
    depends_on:
      - mariadb
    networks:
      - wordpress_network
    restart: unless-stopped
    profiles:
      - tools

# We no longer need wordpress_data, as we are using a local folder.
volumes:
  mariadb_data:
  redis_data:


networks:
  wordpress_network:
    driver: bridge
